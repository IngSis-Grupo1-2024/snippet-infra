version: '3.9'

services:
#  api-runner:
#    container_name: "api-runner"
#    image: ghcr.io/ingsis-grupo1-2024/snippet-runner-main:f61f2863
#    ports:
#      - "8084:8084"
#    environment:
#      DB_USER: sa
#      DB_PASSWORD: password
#      DB_NAME: db-runner
#      DB_HOST: postgres_db
#      DB_PORT: 5432
#      NEW_RELIC_EXPERIMENTAL_RUNTIME: true
#      NEW_RELIC_APP_NAME: SnippetRunner
#      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_RUNNER_KEY}
#  db-runner:
#    container_name: postgres_db
#    image: postgres:12
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_USER: sa
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: db-runner
#    volumes:
#      - db-runner:/var/lib/postgresql/data

#  db-manager:
#    container_name: manager_postgres_db
#    image: postgres:12
#    ports:
#      - 5433:5432
#    environment:
#      POSTGRES_USER: sa
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: db-manager
#    volumes:
#      - db-manager:/var/lib/postgresql/data

#  api-configurations:
#    container_name: "api-configurations"
#    image: ghcr.io/ingsis-grupo1-2024/snippet-configurations-dev:latest
#    ports:
#      - 8082:8082
#    environment:
#      #   best idea -> .env in repository
#      DB_USER: sa
#      DB_PASSWORD: password
#      DB_NAME: db-configurations
#      DB_HOST: conf_postgres_db
#      DB_PORT: 5434
#      NEW_RELIC_EXPERIMENTAL_RUNTIME: true
#      NEW_RELIC_APP_NAME: SnippetConfigurations
#      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_CONF_KEY}
#  db-configurations:
#    container_name: conf_postgres_db
#    image: postgres:12
#    ports:
#      - 5434:5432
#    environment:
#      POSTGRES_USER: sa
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: db-configurations
#    volumes:
#      - db-configurations:/var/lib/postgresql/data

#  api-permissions:
#    container_name: "api-permissions"
#    image: ghcr.io/ingsis-grupo1-2024/snippet-permission-main:latest
#    ports:
#      - "8083:8083"
#    environment:
#      DB_USER: sa
#      DB_PASSWORD: password
#      DB_NAME: db-permissions
#      DB_HOST: perm_postgres_db
#      DB_PORT: 5435
#      NEW_RELIC_EXPERIMENTAL_RUNTIME: true
#      NEW_RELIC_APP_NAME: SnippetPermission
#      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_PERM_KEY}
#  db-permissions:
#    container_name: perm_postgres_db
#    image: postgres:12
#    ports:
#      - "5435:5432"
#    environment:
#      POSTGRES_USER: sa
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: db-permissions
#    volumes:
#      - db-permissions:/var/lib/postgresql/data

#  asset-service-api:
#    container_name: "asset_service"
#    image: ghcr.io/ingsis-grupo1-2024/asset-service-main:latest
#    ports:
#      - "8080:8080"
#    environment:
#      AZURE_HOST: "http://azurite"
#      NEW_RELIC_EXPERIMENTAL_RUNTIME: true
#      NEW_RELIC_APP_NAME: asset-service
#      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_ASSET_SERVICE_KEY}

#  azurite:
#    image: mcr.microsoft.com/azure-storage/azurite
#    container_name: "azurite"
#    hostname: azurite
#    restart: always
#    ports:
#      - "10000:10000"
#      - "10001:10001"
#      - "10002:10002"
#    volumes:
#      - blob:/workspace

  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - SUBDOMAINS=${DUCKDNS_DEV_DOMAIN}
      - TOKEN=${DUCKDNS_TOKEN}
    restart: unless-stopped
  webserver:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot
      - ./certbot/conf/:/etc/letsencrypt


volumes:
  db-runner:
  db-manager:
  db-permissions:
  db-configurations:
  blob:
    external: false
